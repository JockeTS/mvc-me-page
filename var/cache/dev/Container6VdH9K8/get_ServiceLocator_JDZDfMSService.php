<?php

namespace Container6VdH9K8;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_ServiceLocator_JDZDfMSService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator.JDZDfMS' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.JDZDfMS'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService, [
            'App\\Controller\\ApiController::apiBook' => ['privates', '.service_locator.B2ZeSAD', 'get_ServiceLocator_B2ZeSADService', true],
            'App\\Controller\\ApiController::apiBooks' => ['privates', '.service_locator.B2ZeSAD', 'get_ServiceLocator_B2ZeSADService', true],
            'App\\Controller\\LibraryController::createBookPost' => ['privates', '.service_locator.GQZbvNR', 'get_ServiceLocator_GQZbvNRService', true],
            'App\\Controller\\LibraryController::deleteBookPost' => ['privates', '.service_locator.B2ZeSAD', 'get_ServiceLocator_B2ZeSADService', true],
            'App\\Controller\\LibraryController::readAllBook' => ['privates', '.service_locator.B2ZeSAD', 'get_ServiceLocator_B2ZeSADService', true],
            'App\\Controller\\LibraryController::readBookById' => ['privates', '.service_locator.B2ZeSAD', 'get_ServiceLocator_B2ZeSADService', true],
            'App\\Controller\\LibraryController::updateBook' => ['privates', '.service_locator.B2ZeSAD', 'get_ServiceLocator_B2ZeSADService', true],
            'App\\Controller\\LibraryController::updateBookPost' => ['privates', '.service_locator.B2ZeSAD', 'get_ServiceLocator_B2ZeSADService', true],
            'App\\Controller\\VizController::vizDef' => ['privates', '.service_locator.VqkG81x', 'get_ServiceLocator_VqkG81xService', true],
            'App\\Controller\\VizController::vizStart' => ['privates', '.service_locator..JjkTYj', 'get_ServiceLocator__JjkTYjService', true],
            'App\\Kernel::loadRoutes' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'App\\Kernel::registerContainerConfiguration' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'kernel::loadRoutes' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'kernel::registerContainerConfiguration' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'App\\Controller\\ApiController:apiBook' => ['privates', '.service_locator.B2ZeSAD', 'get_ServiceLocator_B2ZeSADService', true],
            'App\\Controller\\ApiController:apiBooks' => ['privates', '.service_locator.B2ZeSAD', 'get_ServiceLocator_B2ZeSADService', true],
            'App\\Controller\\LibraryController:createBookPost' => ['privates', '.service_locator.GQZbvNR', 'get_ServiceLocator_GQZbvNRService', true],
            'App\\Controller\\LibraryController:deleteBookPost' => ['privates', '.service_locator.B2ZeSAD', 'get_ServiceLocator_B2ZeSADService', true],
            'App\\Controller\\LibraryController:readAllBook' => ['privates', '.service_locator.B2ZeSAD', 'get_ServiceLocator_B2ZeSADService', true],
            'App\\Controller\\LibraryController:readBookById' => ['privates', '.service_locator.B2ZeSAD', 'get_ServiceLocator_B2ZeSADService', true],
            'App\\Controller\\LibraryController:updateBook' => ['privates', '.service_locator.B2ZeSAD', 'get_ServiceLocator_B2ZeSADService', true],
            'App\\Controller\\LibraryController:updateBookPost' => ['privates', '.service_locator.B2ZeSAD', 'get_ServiceLocator_B2ZeSADService', true],
            'App\\Controller\\VizController:vizDef' => ['privates', '.service_locator.VqkG81x', 'get_ServiceLocator_VqkG81xService', true],
            'App\\Controller\\VizController:vizStart' => ['privates', '.service_locator..JjkTYj', 'get_ServiceLocator__JjkTYjService', true],
            'kernel:loadRoutes' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'kernel:registerContainerConfiguration' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
        ], [
            'App\\Controller\\ApiController::apiBook' => '?',
            'App\\Controller\\ApiController::apiBooks' => '?',
            'App\\Controller\\LibraryController::createBookPost' => '?',
            'App\\Controller\\LibraryController::deleteBookPost' => '?',
            'App\\Controller\\LibraryController::readAllBook' => '?',
            'App\\Controller\\LibraryController::readBookById' => '?',
            'App\\Controller\\LibraryController::updateBook' => '?',
            'App\\Controller\\LibraryController::updateBookPost' => '?',
            'App\\Controller\\VizController::vizDef' => '?',
            'App\\Controller\\VizController::vizStart' => '?',
            'App\\Kernel::loadRoutes' => '?',
            'App\\Kernel::registerContainerConfiguration' => '?',
            'kernel::loadRoutes' => '?',
            'kernel::registerContainerConfiguration' => '?',
            'App\\Controller\\ApiController:apiBook' => '?',
            'App\\Controller\\ApiController:apiBooks' => '?',
            'App\\Controller\\LibraryController:createBookPost' => '?',
            'App\\Controller\\LibraryController:deleteBookPost' => '?',
            'App\\Controller\\LibraryController:readAllBook' => '?',
            'App\\Controller\\LibraryController:readBookById' => '?',
            'App\\Controller\\LibraryController:updateBook' => '?',
            'App\\Controller\\LibraryController:updateBookPost' => '?',
            'App\\Controller\\VizController:vizDef' => '?',
            'App\\Controller\\VizController:vizStart' => '?',
            'kernel:loadRoutes' => '?',
            'kernel:registerContainerConfiguration' => '?',
        ]);
    }
}
