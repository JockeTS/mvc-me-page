{% extends "base.html.twig" %}

{% block title %} Report {% endblock %}

{% block body %}
    <h1>Redovisning av kursmoment i kursen 'mvc'</h1>

    <ul class="report-nav">
        <li><a href="#kmom01">kmom01</a></li>
        <li><a href="#kmom02">kmom02</a></li>
        <li><a href="#kmom03">kmom03</a></li>
        <li><a href="#kmom04">kmom04</a></li>
        <li><a href="#kmom05">kmom05</a></li>
        <li><a href="#kmom06">kmom06</a></li>
        <li><a href="#kmom010">kmom10</a></li>
    </ul>

    <section id="kmom01">
        <h2>Kmom01</h2>

        <h3>Berätta kort om dina förkunskaper och tidigare erfarenheter kring objektorientering.</h3>

        <p>Min senaste erfarenhet av objektorientering kommer från oopython-kursen. Där fick man lära sig generellt om klasser, objekt och arv och hur man går tillväga för att hantera objekt i kodflödet.</p>

        <p>Jag tycker även att modellering av struktur- och flödesdiagram vilket vi sysslade med både i databas och oopython har lett till ett mer objektorienterat tankesätt.</p>

        <p>Jag har även sysslat lite med Java / Android tidigare vilket gjorde att jag hade lite koll innan. Där var såvitt jag minns i princip allting knutet till objekt som interagerade med varandra på olika sätt.</p>

        <h3>Berätta kort om PHPs modell för klasser och objekt. Vilka är de grunder man behöver veta/förstå för att kunna komma igång och skapa sina första klasser?</h3>

        <p>Det första man behöver veta är hur man skapar en klass i PHP och vilka nyckelord man använder. Sedan hur man definierar attribut för en klass och om man väljer att göra dem publika, skyddade eller privata.</p>

        <p>Man bör också ha koll på användandet av setters och getters då det generellt är så man interagerar med attributen. En genväg här kan ju dock vara att använda en konstruktor vid skapandet av nya objekt.</p>

        <p>För webbplatsen som helhet så kan det också vara bra att känna till hur man sparar och använder objekt med hjälp av sessionsvariabler.</p>

        <p>Jobbar man med större projekt så kan det även rekommenderas att ha koll på namespaces för att undvika att klasser med samma namn kolliderar med varandra.</p>

        <p>Även hur man automatiskt "registrerar" klasser med hjälp av autoloader för att minska antalet requires och includes.</p>

        <h3>Reflektera kort över den kodbas, koden, strukturen som användes till uppgiften me/report, hur uppfattar du den?</h3>

        <p>Det var lite rörigt till en början såsom jag alltid tycker det är med nya ramverk. Har inte riktigt fått full koll på hur allt hänger ihop men förhoppningsvis sätter det sig under kursens gång.</p>

        <p>Men jag tycker systemet med routes känns smidigt och man får en bra överblick över webbplatsens innehåll, speciellt när man kan samla flera routes i en fil.</p>

        <p>Gillar även sättet att definiera olika blocks i template-motorn Twig funkar bra och gör det lätt att återanvända mallar som man sedan kan skräddarsy när man behöver en ny vy.</p>

        <p>Har lite sämre koll på hur man får ordning på assets och i synnerhet CSS. Hann tyvärr inte få igång något CSS-ramverk och tyckte det var lite osmidigt att "build:a assets" varje gång man ville ändra på något.</p>

        <h3>Med tanke på artikeln “PHP The Right Way”, vilka delar in den finner du extra intressanta och värdefulla? Är det några särskilda områden som du känner att du vill veta mer om? Lyft fram några delar av artikeln som du känner mer värdefulla.</h3>

        <p>Skulle gärna vilja lära mig lite mer om Standard PHP Library då jag gillar att ha koll på vilken funktionalitet som redan finns tillgänglig när det är en specifik uppgift man ska lösa, så slipper man "återuppfinna hjulet".</p>

        <p>Tycker också det var mycket intressant med olika datastrukturer i oopython så det vore kul att utforska dessa lite även i PHP. Vill också lära mig mer om namespaces då jag får en känsla av att det kan avhjälpa en hel del huvudvärk i vissa specifika situationer.</p>

        <p>En annan sak som jag inte vet om den direkt relaterar till PHP men i alla fall nämndes i artikeln är katalogstrukturer för webbplatser. Det har jag tyckt varit ett lite knepigt ämne ända sen webtec-kursen och är något jag gärna skulle lära mig mer om.</p>

        <h3>Vilken är din TIL för detta kmom?</h3>

        <p>Jag har lärt mig och fått en del repetition kring PHP i allmänhet och objektorientering i synnerhet. Även blivit introducerad till ramverket Symfony med dess olika tillhörande delar. Också lite "PHP-filosofi" tack vare de olika sektionerna i PHP The Right Way.</p>

        <p>Även en del återbekantat mig med tidigare ämnen som Git, CSS, bildhantering m.m som tillhör skapandet av webbplatser men som det tagits en paus med under de två senaste kurserna.</p>
    </section>

    <section id="kmom02">
        <h2>Kmom02</h2>
    </section>

    <section id="kmom03">
        <h2>Kmom03</h2>
    </section>

    <section id="kmom04">
        <h2>Kmom04</h2>
    </section>

    <section id="kmom05">
        <h2>Kmom05</h2>
    </section>

    <section id="kmom06">
        <h2>Kmom06</h2>
    </section>

    <section id="kmom10">
        <h2>Kmom10</h2>
    </section>
{% endblock %}